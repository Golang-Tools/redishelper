package tdigest

import (
	"context"
	"fmt"
	"testing"

	log "github.com/Golang-Tools/loggerhelper/v2"
	"github.com/go-redis/redis/v8"
	"github.com/stretchr/testify/assert"
)

// TEST_REDIS_URL 测试用的redis地址
const TEST_REDIS_URL = "redis://localhost:6379"

func NewBackground(t *testing.T, URL string) (redis.UniversalClient, context.Context) {
	options, err := redis.ParseURL(URL)
	if err != nil {
		assert.FailNow(t, err.Error(), "init from url error")
	}
	cli := redis.NewClient(options)
	ctx := context.Background()
	cli.FlushDB(ctx).Result()
	fmt.Println("prepare task done")
	return cli, ctx
}
func Test_Tdigest_Add(t *testing.T) {
	cli, ctx := NewBackground(t, TEST_REDIS_URL)
	defer cli.Close()
	key := "test-tdigest"
	bf, err := New(cli, WithSpecifiedKey(key), WithInit())
	if err != nil {
		assert.FailNow(t, err.Error(), "NewTDigest error")
	}
	err = bf.AddValue(ctx, 42, 1)
	if err != nil {
		assert.FailNow(t, err.Error(), "AddValue error")
	}
	err = bf.AddValue(ctx, 194, 0.3)
	if err != nil {
		assert.FailNow(t, err.Error(), "AddValue error")
	}
	res, err := bf.CDF(ctx, 10)
	if err != nil {
		assert.FailNow(t, err.Error(), "CDF error")
	}
	log.Debug("CDF result", log.Dict{"res": res})
}
